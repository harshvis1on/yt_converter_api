{"ast":null,"code":"// Safe localStorage utilities with JSON parsing\nexport const safeGetItem = (key, defaultValue = null) => {\n  try {\n    const item = localStorage.getItem(key);\n\n    // Handle null, undefined, or \"undefined\" string\n    if (!item || item === 'null' || item === 'undefined') {\n      return defaultValue;\n    }\n    return JSON.parse(item);\n  } catch (error) {\n    console.error(`Error parsing localStorage item \"${key}\":`, error);\n\n    // Clean up invalid data\n    localStorage.removeItem(key);\n    return defaultValue;\n  }\n};\nexport const safeSetItem = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n    return true;\n  } catch (error) {\n    console.error(`Error setting localStorage item \"${key}\":`, error);\n    return false;\n  }\n};\nexport const cleanupInvalidData = () => {\n  const keysToCheck = ['channelData', 'videosData', 'user_info', 'prefillData'];\n  keysToCheck.forEach(key => {\n    const item = localStorage.getItem(key);\n    if (item === 'undefined' || item === 'null') {\n      console.log(`Cleaning up invalid localStorage key: ${key}`);\n      localStorage.removeItem(key);\n    }\n  });\n};\n\n// Run cleanup on module load\ncleanupInvalidData();","map":{"version":3,"names":["safeGetItem","key","defaultValue","item","localStorage","getItem","JSON","parse","error","console","removeItem","safeSetItem","value","setItem","stringify","cleanupInvalidData","keysToCheck","forEach","log"],"sources":["/Users/harshdeshmukh/YouTube To Mp4 Links/src/utils/localStorage.js"],"sourcesContent":["// Safe localStorage utilities with JSON parsing\nexport const safeGetItem = (key, defaultValue = null) => {\n  try {\n    const item = localStorage.getItem(key);\n    \n    // Handle null, undefined, or \"undefined\" string\n    if (!item || item === 'null' || item === 'undefined') {\n      return defaultValue;\n    }\n    \n    return JSON.parse(item);\n  } catch (error) {\n    console.error(`Error parsing localStorage item \"${key}\":`, error);\n    \n    // Clean up invalid data\n    localStorage.removeItem(key);\n    \n    return defaultValue;\n  }\n};\n\nexport const safeSetItem = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n    return true;\n  } catch (error) {\n    console.error(`Error setting localStorage item \"${key}\":`, error);\n    return false;\n  }\n};\n\nexport const cleanupInvalidData = () => {\n  const keysToCheck = ['channelData', 'videosData', 'user_info', 'prefillData'];\n  \n  keysToCheck.forEach(key => {\n    const item = localStorage.getItem(key);\n    if (item === 'undefined' || item === 'null') {\n      console.log(`Cleaning up invalid localStorage key: ${key}`);\n      localStorage.removeItem(key);\n    }\n  });\n};\n\n// Run cleanup on module load\ncleanupInvalidData();"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAGA,CAACC,GAAG,EAAEC,YAAY,GAAG,IAAI,KAAK;EACvD,IAAI;IACF,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAACJ,GAAG,CAAC;;IAEtC;IACA,IAAI,CAACE,IAAI,IAAIA,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,WAAW,EAAE;MACpD,OAAOD,YAAY;IACrB;IAEA,OAAOI,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;EACzB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoCP,GAAG,IAAI,EAAEO,KAAK,CAAC;;IAEjE;IACAJ,YAAY,CAACM,UAAU,CAACT,GAAG,CAAC;IAE5B,OAAOC,YAAY;EACrB;AACF,CAAC;AAED,OAAO,MAAMS,WAAW,GAAGA,CAACV,GAAG,EAAEW,KAAK,KAAK;EACzC,IAAI;IACFR,YAAY,CAACS,OAAO,CAACZ,GAAG,EAAEK,IAAI,CAACQ,SAAS,CAACF,KAAK,CAAC,CAAC;IAChD,OAAO,IAAI;EACb,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoCP,GAAG,IAAI,EAAEO,KAAK,CAAC;IACjE,OAAO,KAAK;EACd;AACF,CAAC;AAED,OAAO,MAAMO,kBAAkB,GAAGA,CAAA,KAAM;EACtC,MAAMC,WAAW,GAAG,CAAC,aAAa,EAAE,YAAY,EAAE,WAAW,EAAE,aAAa,CAAC;EAE7EA,WAAW,CAACC,OAAO,CAAChB,GAAG,IAAI;IACzB,MAAME,IAAI,GAAGC,YAAY,CAACC,OAAO,CAACJ,GAAG,CAAC;IACtC,IAAIE,IAAI,KAAK,WAAW,IAAIA,IAAI,KAAK,MAAM,EAAE;MAC3CM,OAAO,CAACS,GAAG,CAAC,yCAAyCjB,GAAG,EAAE,CAAC;MAC3DG,YAAY,CAACM,UAAU,CAACT,GAAG,CAAC;IAC9B;EACF,CAAC,CAAC;AACJ,CAAC;;AAED;AACAc,kBAAkB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}