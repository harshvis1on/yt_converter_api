{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{toast}from'react-toastify';import PodcastOnboardingWizard from'./PodcastOnboardingWizard';import{createPodcast}from'../services/n8nApi';import{safeGetItem}from'../utils/localStorage';import{markOnboardingCompleted}from'../utils/onboarding';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function PodcastCreationFlow(){const navigate=useNavigate();const[loading,setLoading]=useState(false);const[channelData,setChannelData]=useState(null);const[prefillData,setPrefillData]=useState(null);// Load data from localStorage on mount\nuseEffect(()=>{const storedChannelData=safeGetItem('channelData');const storedPrefillData=safeGetItem('prefillData');setChannelData(storedChannelData);setPrefillData(storedPrefillData);// Redirect if no channel data after a brief delay (allow for data to load)\nconst timer=setTimeout(()=>{if(!storedChannelData){console.log('No channel data found, redirecting to auth');toast.error('No channel data found. Please start over.');navigate('/auth',{replace:true});}},3000);// Give 3 seconds for data to load\nreturn()=>clearTimeout(timer);},[navigate]);const handleFormSubmit=async formData=>{setLoading(true);try{const result=await createPodcast(formData);if(result&&result.success){// Mark onboarding as completed using utility\nmarkOnboardingCompleted(result.podcastId,result.podcast);// Clean up temporary data\nlocalStorage.removeItem('prefillData');localStorage.removeItem('channelData');localStorage.removeItem('videosData');// Show success message\ntoast.success(`ðŸŽ‰ Podcast \"${formData.title}\" created successfully!`);// Navigate to dashboard\nsetTimeout(()=>{navigate('/dashboard',{replace:true});},2000);}else{throw new Error((result===null||result===void 0?void 0:result.message)||'Podcast creation failed');}}catch(error){console.error('Podcast creation error:',error);toast.error('Failed to create podcast: '+error.message);setLoading(false);}};const handleCancel=()=>{// Clean up stored data and redirect back to auth\nlocalStorage.removeItem('channelData');localStorage.removeItem('videosData');localStorage.removeItem('prefillData');toast.info('Podcast creation cancelled');navigate('/auth',{replace:true});};// Don't render if no data\nif(!channelData||!prefillData){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-500 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Loading channel data...\"})]})});}return/*#__PURE__*/_jsx(PodcastOnboardingWizard,{channelData:channelData,prefillData:prefillData,onSubmit:handleFormSubmit,onCancel:handleCancel,loading:loading});}","map":{"version":3,"names":["React","useState","useEffect","useNavigate","toast","PodcastOnboardingWizard","createPodcast","safeGetItem","markOnboardingCompleted","jsx","_jsx","jsxs","_jsxs","PodcastCreationFlow","navigate","loading","setLoading","channelData","setChannelData","prefillData","setPrefillData","storedChannelData","storedPrefillData","timer","setTimeout","console","log","error","replace","clearTimeout","handleFormSubmit","formData","result","success","podcastId","podcast","localStorage","removeItem","title","Error","message","handleCancel","info","className","children","onSubmit","onCancel"],"sources":["/Users/harshdeshmukh/YouTube To Mp4 Links/src/components/PodcastCreationFlow.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PodcastOnboardingWizard from './PodcastOnboardingWizard';\nimport { createPodcast } from '../services/n8nApi';\nimport { safeGetItem } from '../utils/localStorage';\nimport { markOnboardingCompleted } from '../utils/onboarding';\n\nexport default function PodcastCreationFlow() {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [channelData, setChannelData] = useState(null);\n  const [prefillData, setPrefillData] = useState(null);\n\n  // Load data from localStorage on mount\n  useEffect(() => {\n    const storedChannelData = safeGetItem('channelData');\n    const storedPrefillData = safeGetItem('prefillData');\n    \n    setChannelData(storedChannelData);\n    setPrefillData(storedPrefillData);\n    \n    // Redirect if no channel data after a brief delay (allow for data to load)\n    const timer = setTimeout(() => {\n      if (!storedChannelData) {\n        console.log('No channel data found, redirecting to auth');\n        toast.error('No channel data found. Please start over.');\n        navigate('/auth', { replace: true });\n      }\n    }, 3000); // Give 3 seconds for data to load\n    \n    return () => clearTimeout(timer);\n  }, [navigate]);\n\n  const handleFormSubmit = async (formData) => {\n    setLoading(true);\n    \n    try {\n      const result = await createPodcast(formData);\n      \n      if (result && result.success) {\n        // Mark onboarding as completed using utility\n        markOnboardingCompleted(result.podcastId, result.podcast);\n        \n        // Clean up temporary data\n        localStorage.removeItem('prefillData');\n        localStorage.removeItem('channelData');\n        localStorage.removeItem('videosData');\n        \n        // Show success message\n        toast.success(`ðŸŽ‰ Podcast \"${formData.title}\" created successfully!`);\n        \n        // Navigate to dashboard\n        setTimeout(() => {\n          navigate('/dashboard', { replace: true });\n        }, 2000);\n        \n      } else {\n        throw new Error(result?.message || 'Podcast creation failed');\n      }\n    } catch (error) {\n      console.error('Podcast creation error:', error);\n      toast.error('Failed to create podcast: ' + error.message);\n      setLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    // Clean up stored data and redirect back to auth\n    localStorage.removeItem('channelData');\n    localStorage.removeItem('videosData');\n    localStorage.removeItem('prefillData');\n    \n    toast.info('Podcast creation cancelled');\n    navigate('/auth', { replace: true });\n  };\n\n  // Don't render if no data\n  if (!channelData || !prefillData) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-500 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading channel data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <PodcastOnboardingWizard\n      channelData={channelData}\n      prefillData={prefillData}\n      onSubmit={handleFormSubmit}\n      onCancel={handleCancel}\n      loading={loading}\n    />\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}