{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { fetchEpisodes } from '../services/n8nApi';\nimport { safeGetItem } from '../utils/localStorage';\nexport function useEpisodes(podcastId) {\n  _s();\n  const [state, setState] = useState({\n    loading: false,\n    error: null,\n    episodes: [],\n    totalCount: 0\n  });\n  useEffect(() => {\n    if (podcastId) {\n      loadEpisodes();\n    }\n  }, [podcastId]);\n  const loadEpisodes = async () => {\n    try {\n      setState(s => ({\n        ...s,\n        loading: true,\n        error: null\n      }));\n      const userInfo = safeGetItem('user_info', {});\n      if (!userInfo.id) {\n        throw new Error('User not authenticated');\n      }\n      console.log('📻 Loading episodes for podcast:', podcastId);\n      const result = await fetchEpisodes(podcastId, userInfo.id);\n      if (result.success) {\n        var _result$episodes;\n        setState(s => ({\n          ...s,\n          episodes: result.episodes || [],\n          totalCount: result.totalCount || 0,\n          loading: false\n        }));\n        console.log(`✅ Loaded ${((_result$episodes = result.episodes) === null || _result$episodes === void 0 ? void 0 : _result$episodes.length) || 0} episodes`);\n      } else {\n        throw new Error(result.error || 'Failed to load episodes');\n      }\n    } catch (error) {\n      console.error('❌ Failed to load episodes:', error);\n      setState(s => ({\n        ...s,\n        error: error.message,\n        loading: false,\n        episodes: [],\n        totalCount: 0\n      }));\n    }\n  };\n  const refreshEpisodes = () => {\n    if (podcastId) {\n      loadEpisodes();\n    }\n  };\n  return {\n    ...state,\n    refreshEpisodes\n  };\n}\n_s(useEpisodes, \"Wks9zn6r9YasEFbceeNu19sphwM=\");","map":{"version":3,"names":["useState","useEffect","fetchEpisodes","safeGetItem","useEpisodes","podcastId","_s","state","setState","loading","error","episodes","totalCount","loadEpisodes","s","userInfo","id","Error","console","log","result","success","_result$episodes","length","message","refreshEpisodes"],"sources":["/Users/harshdeshmukh/YouTube To Mp4 Links/src/hooks/useEpisodes.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchEpisodes } from '../services/n8nApi';\nimport { safeGetItem } from '../utils/localStorage';\n\nexport function useEpisodes(podcastId) {\n  const [state, setState] = useState({\n    loading: false,\n    error: null,\n    episodes: [],\n    totalCount: 0\n  });\n\n  useEffect(() => {\n    if (podcastId) {\n      loadEpisodes();\n    }\n  }, [podcastId]);\n\n  const loadEpisodes = async () => {\n    try {\n      setState(s => ({ ...s, loading: true, error: null }));\n      \n      const userInfo = safeGetItem('user_info', {});\n      if (!userInfo.id) {\n        throw new Error('User not authenticated');\n      }\n\n      console.log('📻 Loading episodes for podcast:', podcastId);\n      const result = await fetchEpisodes(podcastId, userInfo.id);\n      \n      if (result.success) {\n        setState(s => ({ \n          ...s, \n          episodes: result.episodes || [], \n          totalCount: result.totalCount || 0,\n          loading: false \n        }));\n        console.log(`✅ Loaded ${result.episodes?.length || 0} episodes`);\n      } else {\n        throw new Error(result.error || 'Failed to load episodes');\n      }\n    } catch (error) {\n      console.error('❌ Failed to load episodes:', error);\n      setState(s => ({ \n        ...s, \n        error: error.message, \n        loading: false,\n        episodes: [],\n        totalCount: 0\n      }));\n    }\n  };\n\n  const refreshEpisodes = () => {\n    if (podcastId) {\n      loadEpisodes();\n    }\n  };\n\n  return {\n    ...state,\n    refreshEpisodes\n  };\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,WAAW,QAAQ,uBAAuB;AAEnD,OAAO,SAASC,WAAWA,CAACC,SAAS,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC;IACjCS,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACd,IAAII,SAAS,EAAE;MACbQ,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACR,SAAS,CAAC,CAAC;EAEf,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFL,QAAQ,CAACM,CAAC,KAAK;QAAE,GAAGA,CAAC;QAAEL,OAAO,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC,CAAC;MAErD,MAAMK,QAAQ,GAAGZ,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;MAC7C,IAAI,CAACY,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MAEAC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEd,SAAS,CAAC;MAC1D,MAAMe,MAAM,GAAG,MAAMlB,aAAa,CAACG,SAAS,EAAEU,QAAQ,CAACC,EAAE,CAAC;MAE1D,IAAII,MAAM,CAACC,OAAO,EAAE;QAAA,IAAAC,gBAAA;QAClBd,QAAQ,CAACM,CAAC,KAAK;UACb,GAAGA,CAAC;UACJH,QAAQ,EAAES,MAAM,CAACT,QAAQ,IAAI,EAAE;UAC/BC,UAAU,EAAEQ,MAAM,CAACR,UAAU,IAAI,CAAC;UAClCH,OAAO,EAAE;QACX,CAAC,CAAC,CAAC;QACHS,OAAO,CAACC,GAAG,CAAC,YAAY,EAAAG,gBAAA,GAAAF,MAAM,CAACT,QAAQ,cAAAW,gBAAA,uBAAfA,gBAAA,CAAiBC,MAAM,KAAI,CAAC,WAAW,CAAC;MAClE,CAAC,MAAM;QACL,MAAM,IAAIN,KAAK,CAACG,MAAM,CAACV,KAAK,IAAI,yBAAyB,CAAC;MAC5D;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdQ,OAAO,CAACR,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDF,QAAQ,CAACM,CAAC,KAAK;QACb,GAAGA,CAAC;QACJJ,KAAK,EAAEA,KAAK,CAACc,OAAO;QACpBf,OAAO,EAAE,KAAK;QACdE,QAAQ,EAAE,EAAE;QACZC,UAAU,EAAE;MACd,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAMa,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIpB,SAAS,EAAE;MACbQ,YAAY,CAAC,CAAC;IAChB;EACF,CAAC;EAED,OAAO;IACL,GAAGN,KAAK;IACRkB;EACF,CAAC;AACH;AAACnB,EAAA,CA3DeF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}