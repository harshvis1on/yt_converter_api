{"ast":null,"code":"import{useState,useEffect}from'react';import{fetchEpisodes}from'../services/n8nApi';import{safeGetItem}from'../utils/localStorage';export function useEpisodes(podcastId){const[state,setState]=useState({loading:false,error:null,episodes:[],totalCount:0});useEffect(()=>{if(podcastId){loadEpisodes();}},[podcastId]);const loadEpisodes=async()=>{try{setState(s=>({...s,loading:true,error:null}));const userInfo=safeGetItem('user_info',{});if(!userInfo.id){throw new Error('User not authenticated');}console.log('📻 Loading episodes for podcast:',podcastId);const result=await fetchEpisodes(podcastId,userInfo.id);if(result.success){var _result$episodes;setState(s=>({...s,episodes:result.episodes||[],totalCount:result.totalCount||0,loading:false}));console.log(`✅ Loaded ${((_result$episodes=result.episodes)===null||_result$episodes===void 0?void 0:_result$episodes.length)||0} episodes`);}else{throw new Error(result.error||'Failed to load episodes');}}catch(error){console.error('❌ Failed to load episodes:',error);setState(s=>({...s,error:error.message,loading:false,episodes:[],totalCount:0}));}};const refreshEpisodes=()=>{if(podcastId){loadEpisodes();}};return{...state,refreshEpisodes};}","map":{"version":3,"names":["useState","useEffect","fetchEpisodes","safeGetItem","useEpisodes","podcastId","state","setState","loading","error","episodes","totalCount","loadEpisodes","s","userInfo","id","Error","console","log","result","success","_result$episodes","length","message","refreshEpisodes"],"sources":["/Users/harshdeshmukh/YouTube To Mp4 Links/src/hooks/useEpisodes.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchEpisodes } from '../services/n8nApi';\nimport { safeGetItem } from '../utils/localStorage';\n\nexport function useEpisodes(podcastId) {\n  const [state, setState] = useState({\n    loading: false,\n    error: null,\n    episodes: [],\n    totalCount: 0\n  });\n\n  useEffect(() => {\n    if (podcastId) {\n      loadEpisodes();\n    }\n  }, [podcastId]);\n\n  const loadEpisodes = async () => {\n    try {\n      setState(s => ({ ...s, loading: true, error: null }));\n      \n      const userInfo = safeGetItem('user_info', {});\n      if (!userInfo.id) {\n        throw new Error('User not authenticated');\n      }\n\n      console.log('📻 Loading episodes for podcast:', podcastId);\n      const result = await fetchEpisodes(podcastId, userInfo.id);\n      \n      if (result.success) {\n        setState(s => ({ \n          ...s, \n          episodes: result.episodes || [], \n          totalCount: result.totalCount || 0,\n          loading: false \n        }));\n        console.log(`✅ Loaded ${result.episodes?.length || 0} episodes`);\n      } else {\n        throw new Error(result.error || 'Failed to load episodes');\n      }\n    } catch (error) {\n      console.error('❌ Failed to load episodes:', error);\n      setState(s => ({ \n        ...s, \n        error: error.message, \n        loading: false,\n        episodes: [],\n        totalCount: 0\n      }));\n    }\n  };\n\n  const refreshEpisodes = () => {\n    if (podcastId) {\n      loadEpisodes();\n    }\n  };\n\n  return {\n    ...state,\n    refreshEpisodes\n  };\n}"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,aAAa,KAAQ,oBAAoB,CAClD,OAASC,WAAW,KAAQ,uBAAuB,CAEnD,MAAO,SAAS,CAAAC,WAAWA,CAACC,SAAS,CAAE,CACrC,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,CACjCQ,OAAO,CAAE,KAAK,CACdC,KAAK,CAAE,IAAI,CACXC,QAAQ,CAAE,EAAE,CACZC,UAAU,CAAE,CACd,CAAC,CAAC,CAEFV,SAAS,CAAC,IAAM,CACd,GAAII,SAAS,CAAE,CACbO,YAAY,CAAC,CAAC,CAChB,CACF,CAAC,CAAE,CAACP,SAAS,CAAC,CAAC,CAEf,KAAM,CAAAO,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACFL,QAAQ,CAACM,CAAC,GAAK,CAAE,GAAGA,CAAC,CAAEL,OAAO,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CAAC,CAErD,KAAM,CAAAK,QAAQ,CAAGX,WAAW,CAAC,WAAW,CAAE,CAAC,CAAC,CAAC,CAC7C,GAAI,CAACW,QAAQ,CAACC,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,wBAAwB,CAAC,CAC3C,CAEAC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEb,SAAS,CAAC,CAC1D,KAAM,CAAAc,MAAM,CAAG,KAAM,CAAAjB,aAAa,CAACG,SAAS,CAAES,QAAQ,CAACC,EAAE,CAAC,CAE1D,GAAII,MAAM,CAACC,OAAO,CAAE,KAAAC,gBAAA,CAClBd,QAAQ,CAACM,CAAC,GAAK,CACb,GAAGA,CAAC,CACJH,QAAQ,CAAES,MAAM,CAACT,QAAQ,EAAI,EAAE,CAC/BC,UAAU,CAAEQ,MAAM,CAACR,UAAU,EAAI,CAAC,CAClCH,OAAO,CAAE,KACX,CAAC,CAAC,CAAC,CACHS,OAAO,CAACC,GAAG,CAAC,YAAY,EAAAG,gBAAA,CAAAF,MAAM,CAACT,QAAQ,UAAAW,gBAAA,iBAAfA,gBAAA,CAAiBC,MAAM,GAAI,CAAC,WAAW,CAAC,CAClE,CAAC,IAAM,CACL,KAAM,IAAI,CAAAN,KAAK,CAACG,MAAM,CAACV,KAAK,EAAI,yBAAyB,CAAC,CAC5D,CACF,CAAE,MAAOA,KAAK,CAAE,CACdQ,OAAO,CAACR,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClDF,QAAQ,CAACM,CAAC,GAAK,CACb,GAAGA,CAAC,CACJJ,KAAK,CAAEA,KAAK,CAACc,OAAO,CACpBf,OAAO,CAAE,KAAK,CACdE,QAAQ,CAAE,EAAE,CACZC,UAAU,CAAE,CACd,CAAC,CAAC,CAAC,CACL,CACF,CAAC,CAED,KAAM,CAAAa,eAAe,CAAGA,CAAA,GAAM,CAC5B,GAAInB,SAAS,CAAE,CACbO,YAAY,CAAC,CAAC,CAChB,CACF,CAAC,CAED,MAAO,CACL,GAAGN,KAAK,CACRkB,eACF,CAAC,CACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}