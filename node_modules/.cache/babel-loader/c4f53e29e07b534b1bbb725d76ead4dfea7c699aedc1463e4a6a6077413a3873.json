{"ast":null,"code":"// n8n Configuration Helper\n// This helps manage CORS issues and provides fallback strategies\nexport const N8N_CONFIG={// Primary n8n server\nPRIMARY_URL:process.env.REACT_APP_N8N_BASE_URL||'https://n8n-6s78.onrender.com/',// Check if we're in development\nIS_DEV:process.env.NODE_ENV==='development',// Check if we should use mock mode\nUSE_MOCKS:process.env.REACT_APP_DEV_MODE==='true',// Timeout configurations\nTIMEOUTS:{DEFAULT:30000,// 30 seconds\nLONG_RUNNING:180000,// 3 minutes for episode creation\nHEALTH_CHECK:5000// 5 seconds for health checks\n},// Endpoints that are considered long-running\nLONG_RUNNING_ENDPOINTS:['create-episodes','create-podcast','sync-megaphone-episodes'],// Check if endpoint is long-running\nisLongRunning:endpoint=>{return N8N_CONFIG.LONG_RUNNING_ENDPOINTS.includes(endpoint);},// Get appropriate timeout for endpoint\ngetTimeout:endpoint=>{return N8N_CONFIG.isLongRunning(endpoint)?N8N_CONFIG.TIMEOUTS.LONG_RUNNING:N8N_CONFIG.TIMEOUTS.DEFAULT;},// Check if we should fall back to mocks for this error\nshouldFallbackToMock:function(error,endpoint){let isDev=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;// Always use mocks if explicitly enabled\nif(N8N_CONFIG.USE_MOCKS)return true;// For CORS/network errors in development, use mocks\nif(isDev&&(error.message.includes('Failed to fetch')||error.message.includes('CORS')||error.message.includes('NetworkError'))){return true;}// For non-critical endpoints, allow fallback\nconst criticalEndpoints=['create-episodes','create-podcast'];if(!criticalEndpoints.includes(endpoint)&&(error.message.includes('Failed to fetch')||error.message.includes('404'))){return true;}return false;},// Get user-friendly error message\ngetUserFriendlyError:(error,endpoint)=>{if(error.name==='AbortError'){const timeout=N8N_CONFIG.getTimeout(endpoint);const minutes=Math.ceil(timeout/60000);return`Operation timed out after ${minutes} minute${minutes>1?'s':''}. The process may still be running in the background.`;}if(error.message.includes('Failed to fetch')||error.message.includes('CORS')){return'Unable to connect to the server. Please check your internet connection.';}if(error.message.includes('404')){return'Workflow not found. Please ensure your n8n workflows are properly configured.';}if(error.message.includes('500')){return'Server error occurred. Please try again in a moment.';}return error.message||'An unexpected error occurred.';}};export default N8N_CONFIG;","map":{"version":3,"names":["N8N_CONFIG","PRIMARY_URL","process","env","REACT_APP_N8N_BASE_URL","IS_DEV","NODE_ENV","USE_MOCKS","REACT_APP_DEV_MODE","TIMEOUTS","DEFAULT","LONG_RUNNING","HEALTH_CHECK","LONG_RUNNING_ENDPOINTS","isLongRunning","endpoint","includes","getTimeout","shouldFallbackToMock","error","isDev","arguments","length","undefined","message","criticalEndpoints","getUserFriendlyError","name","timeout","minutes","Math","ceil"],"sources":["/Users/harshdeshmukh/YouTube To Mp4 Links/src/utils/n8nConfig.js"],"sourcesContent":["// n8n Configuration Helper\n// This helps manage CORS issues and provides fallback strategies\n\nexport const N8N_CONFIG = {\n  // Primary n8n server\n  PRIMARY_URL: process.env.REACT_APP_N8N_BASE_URL || 'https://n8n-6s78.onrender.com/',\n  \n  // Check if we're in development\n  IS_DEV: process.env.NODE_ENV === 'development',\n  \n  // Check if we should use mock mode\n  USE_MOCKS: process.env.REACT_APP_DEV_MODE === 'true',\n  \n  // Timeout configurations\n  TIMEOUTS: {\n    DEFAULT: 30000, // 30 seconds\n    LONG_RUNNING: 180000, // 3 minutes for episode creation\n    HEALTH_CHECK: 5000 // 5 seconds for health checks\n  },\n  \n  // Endpoints that are considered long-running\n  LONG_RUNNING_ENDPOINTS: [\n    'create-episodes',\n    'create-podcast',\n    'sync-megaphone-episodes'\n  ],\n  \n  // Check if endpoint is long-running\n  isLongRunning: (endpoint) => {\n    return N8N_CONFIG.LONG_RUNNING_ENDPOINTS.includes(endpoint);\n  },\n  \n  // Get appropriate timeout for endpoint\n  getTimeout: (endpoint) => {\n    return N8N_CONFIG.isLongRunning(endpoint) \n      ? N8N_CONFIG.TIMEOUTS.LONG_RUNNING \n      : N8N_CONFIG.TIMEOUTS.DEFAULT;\n  },\n  \n  // Check if we should fall back to mocks for this error\n  shouldFallbackToMock: (error, endpoint, isDev = false) => {\n    // Always use mocks if explicitly enabled\n    if (N8N_CONFIG.USE_MOCKS) return true;\n    \n    // For CORS/network errors in development, use mocks\n    if (isDev && (\n      error.message.includes('Failed to fetch') ||\n      error.message.includes('CORS') ||\n      error.message.includes('NetworkError')\n    )) {\n      return true;\n    }\n    \n    // For non-critical endpoints, allow fallback\n    const criticalEndpoints = ['create-episodes', 'create-podcast'];\n    if (!criticalEndpoints.includes(endpoint) && (\n      error.message.includes('Failed to fetch') ||\n      error.message.includes('404')\n    )) {\n      return true;\n    }\n    \n    return false;\n  },\n  \n  // Get user-friendly error message\n  getUserFriendlyError: (error, endpoint) => {\n    if (error.name === 'AbortError') {\n      const timeout = N8N_CONFIG.getTimeout(endpoint);\n      const minutes = Math.ceil(timeout / 60000);\n      return `Operation timed out after ${minutes} minute${minutes > 1 ? 's' : ''}. The process may still be running in the background.`;\n    }\n    \n    if (error.message.includes('Failed to fetch') || error.message.includes('CORS')) {\n      return 'Unable to connect to the server. Please check your internet connection.';\n    }\n    \n    if (error.message.includes('404')) {\n      return 'Workflow not found. Please ensure your n8n workflows are properly configured.';\n    }\n    \n    if (error.message.includes('500')) {\n      return 'Server error occurred. Please try again in a moment.';\n    }\n    \n    return error.message || 'An unexpected error occurred.';\n  }\n};\n\nexport default N8N_CONFIG;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}