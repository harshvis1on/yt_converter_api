{"ast":null,"code":"import React,{useState,createContext,useContext,useEffect}from'react';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import{ToastContainer}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import GoogleAuth from'./components/GoogleAuth';import Dashboard from'./components/Dashboard';import PodcastCreationFlow from'./components/PodcastCreationFlow';import PodcastDetails from'./components/PodcastDetails';import AnalyticsPage from'./components/AnalyticsPage';import PodcastPage from'./components/PodcastPage';import TransactionsPage from'./components/TransactionsPage';import ReferralsPage from'./components/ReferralsPage';import SettingsPage from'./components/SettingsPage';import{useYouTubeSync}from'./hooks/useYouTubeSync';import{toast}from'react-toastify';import{isOnboardingCompleted,clearOnboardingData,clearAllAuthData}from'./utils/onboarding';// Auth context\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>useContext(AuthContext);function PodcastProtectedRoute(_ref){let{children}=_ref;const{signedIn}=useAuth();if(!signedIn){return/*#__PURE__*/_jsx(Navigate,{to:\"/auth\",replace:true});}// Check if user has completed onboarding\nif(!isOnboardingCompleted()){// User hasn't completed onboarding, redirect to auth to restart the flow\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/auth\",replace:true});}return children;}function App(){const[signedIn,setSignedIn]=useState(false);const[userInfo,setUserInfo]=useState(null);// Check for existing session on mount\nuseEffect(()=>{const token=localStorage.getItem('google_token');const userData=localStorage.getItem('user_info');const podcastId=localStorage.getItem('podcastId');const onboardingCompleted=localStorage.getItem('onboardingCompleted');console.log('🔍 App initialization - checking stored auth state:',{hasToken:!!token,hasUserData:!!userData,hasPodcastId:!!podcastId,onboardingCompleted});if(token&&userData){setSignedIn(true);try{setUserInfo(JSON.parse(userData));console.log('✅ Restored user session from localStorage');}catch(error){console.error('Error parsing user data:',error);// Clear invalid data\nlocalStorage.removeItem('user_info');setSignedIn(false);}}},[]);const login=()=>setSignedIn(true);const logout=()=>{// Clear auth data\nlocalStorage.removeItem('google_token');localStorage.removeItem('user_info');localStorage.removeItem('isYouTubeConnected');// Clear onboarding data\nclearOnboardingData();setSignedIn(false);setUserInfo(null);toast.info('You have been signed out');};// Use the sync hook at the top level to share state\nconst sync=useYouTubeSync();return/*#__PURE__*/_jsxs(AuthContext.Provider,{value:{signedIn,login,logout,userInfo},children:[/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/auth\",element:signedIn?// If signed in, check if onboarding is complete\nisOnboardingCompleted()?/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\",replace:true}):/*#__PURE__*/_jsx(GoogleAuth,{}):/*#__PURE__*/_jsx(GoogleAuth,{})}),/*#__PURE__*/_jsx(Route,{path:\"/auth/callback\",element:/*#__PURE__*/_jsx(GoogleAuth,{})}),/*#__PURE__*/_jsx(Route,{path:\"/create-podcast\",element:signedIn?/*#__PURE__*/_jsx(PodcastCreationFlow,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/auth\",replace:true})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:/*#__PURE__*/_jsx(PodcastProtectedRoute,{children:/*#__PURE__*/_jsx(Dashboard,{sync:sync,userInfo:userInfo})})}),/*#__PURE__*/_jsx(Route,{path:\"/podcast\",element:/*#__PURE__*/_jsx(PodcastProtectedRoute,{children:/*#__PURE__*/_jsx(PodcastPage,{userInfo:userInfo})})}),/*#__PURE__*/_jsx(Route,{path:\"/analytics\",element:/*#__PURE__*/_jsx(PodcastProtectedRoute,{children:/*#__PURE__*/_jsx(AnalyticsPage,{userInfo:userInfo})})}),/*#__PURE__*/_jsx(Route,{path:\"/transactions\",element:/*#__PURE__*/_jsx(PodcastProtectedRoute,{children:/*#__PURE__*/_jsx(TransactionsPage,{userInfo:userInfo})})}),/*#__PURE__*/_jsx(Route,{path:\"/referrals\",element:/*#__PURE__*/_jsx(PodcastProtectedRoute,{children:/*#__PURE__*/_jsx(ReferralsPage,{userInfo:userInfo})})}),/*#__PURE__*/_jsx(Route,{path:\"/settings\",element:/*#__PURE__*/_jsx(PodcastProtectedRoute,{children:/*#__PURE__*/_jsx(SettingsPage,{userInfo:userInfo})})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Navigate,{to:signedIn?\"/dashboard\":\"/auth\",replace:true})}),/*#__PURE__*/_jsx(Route,{path:\"/reset\",element:/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-8 rounded-lg shadow-md text-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-4\",children:\"Reset Authentication\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{clearAllAuthData();setSignedIn(false);setUserInfo(null);toast.success('All authentication data cleared!');setTimeout(()=>window.location.href='/auth',1000);},className:\"bg-red-600 text-white px-6 py-3 rounded-lg hover:bg-red-700\",children:\"Clear All Data & Reset\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 text-sm mt-4\",children:\"This will clear all stored authentication data\"})]})})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/auth\",replace:true})}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/auth\",replace:true})}),/*#__PURE__*/_jsx(Route,{path:\"/connect-youtube\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/auth\",replace:true})})]})}),/*#__PURE__*/_jsx(ToastContainer,{position:\"top-right\",autoClose:5000,hideProgressBar:false,newestOnTop:false,closeOnClick:true,rtl:false,pauseOnFocusLoss:true,draggable:true,pauseOnHover:true,theme:\"light\",style:{zIndex:9999}})]});}export default App;","map":{"version":3,"names":["React","useState","createContext","useContext","useEffect","BrowserRouter","Router","Routes","Route","Navigate","ToastContainer","GoogleAuth","Dashboard","PodcastCreationFlow","PodcastDetails","AnalyticsPage","PodcastPage","TransactionsPage","ReferralsPage","SettingsPage","useYouTubeSync","toast","isOnboardingCompleted","clearOnboardingData","clearAllAuthData","jsx","_jsx","jsxs","_jsxs","AuthContext","useAuth","PodcastProtectedRoute","_ref","children","signedIn","to","replace","App","setSignedIn","userInfo","setUserInfo","token","localStorage","getItem","userData","podcastId","onboardingCompleted","console","log","hasToken","hasUserData","hasPodcastId","JSON","parse","error","removeItem","login","logout","info","sync","Provider","value","path","element","className","onClick","success","setTimeout","window","location","href","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","style","zIndex"],"sources":["/Users/harshdeshmukh/YouTube To Mp4 Links/src/App.jsx"],"sourcesContent":["import React, { useState, createContext, useContext, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport GoogleAuth from './components/GoogleAuth';\nimport Dashboard from './components/Dashboard';\nimport PodcastCreationFlow from './components/PodcastCreationFlow';\nimport PodcastDetails from './components/PodcastDetails';\nimport AnalyticsPage from './components/AnalyticsPage';\nimport PodcastPage from './components/PodcastPage';\nimport TransactionsPage from './components/TransactionsPage';\nimport ReferralsPage from './components/ReferralsPage';\nimport SettingsPage from './components/SettingsPage';\nimport { useYouTubeSync } from './hooks/useYouTubeSync';\nimport { toast } from 'react-toastify';\nimport { isOnboardingCompleted, clearOnboardingData, clearAllAuthData } from './utils/onboarding';\n\n// Auth context\nconst AuthContext = createContext();\nexport const useAuth = () => useContext(AuthContext);\n\n\nfunction PodcastProtectedRoute({ children }) {\n  const { signedIn } = useAuth();\n  \n  if (!signedIn) {\n    return <Navigate to=\"/auth\" replace />;\n  }\n  \n  // Check if user has completed onboarding\n  if (!isOnboardingCompleted()) {\n    // User hasn't completed onboarding, redirect to auth to restart the flow\n    return <Navigate to=\"/auth\" replace />;\n  }\n  \n  return children;\n}\n\nfunction App() {\n  const [signedIn, setSignedIn] = useState(false);\n  const [userInfo, setUserInfo] = useState(null);\n  \n  // Check for existing session on mount\n  useEffect(() => {\n    const token = localStorage.getItem('google_token');\n    const userData = localStorage.getItem('user_info');\n    const podcastId = localStorage.getItem('podcastId');\n    const onboardingCompleted = localStorage.getItem('onboardingCompleted');\n    \n    console.log('🔍 App initialization - checking stored auth state:', {\n      hasToken: !!token,\n      hasUserData: !!userData,\n      hasPodcastId: !!podcastId,\n      onboardingCompleted\n    });\n    \n    if (token && userData) {\n      setSignedIn(true);\n      try {\n        setUserInfo(JSON.parse(userData));\n        console.log('✅ Restored user session from localStorage');\n      } catch (error) {\n        console.error('Error parsing user data:', error);\n        // Clear invalid data\n        localStorage.removeItem('user_info');\n        setSignedIn(false);\n      }\n    }\n  }, []);\n  \n  const login = () => setSignedIn(true);\n  \n  const logout = () => {\n    // Clear auth data\n    localStorage.removeItem('google_token');\n    localStorage.removeItem('user_info');\n    localStorage.removeItem('isYouTubeConnected');\n    \n    // Clear onboarding data\n    clearOnboardingData();\n    \n    setSignedIn(false);\n    setUserInfo(null);\n    \n    toast.info('You have been signed out');\n  };\n\n  // Use the sync hook at the top level to share state\n  const sync = useYouTubeSync();\n\n\n  return (\n    <AuthContext.Provider value={{ signedIn, login, logout, userInfo }}>\n      <Router>\n        <Routes>\n          {/* Main authentication route */}\n          <Route path=\"/auth\" element={\n            signedIn ? (\n              // If signed in, check if onboarding is complete\n              isOnboardingCompleted() ? \n                <Navigate to=\"/dashboard\" replace /> : \n                <GoogleAuth />\n            ) : <GoogleAuth />\n          } />\n          <Route path=\"/auth/callback\" element={<GoogleAuth />} />\n          \n          {/* Podcast creation form route - only for users without existing podcasts */}\n          <Route path=\"/create-podcast\" element={\n            signedIn ? <PodcastCreationFlow /> : <Navigate to=\"/auth\" replace />\n          } />\n          \n          {/* Protected dashboard route */}\n          <Route path=\"/dashboard\" element={\n            <PodcastProtectedRoute>\n              <Dashboard sync={sync} userInfo={userInfo} />\n            </PodcastProtectedRoute>\n          } />\n          \n          {/* Podcast details route */}\n          <Route path=\"/podcast\" element={\n            <PodcastProtectedRoute>\n              <PodcastPage userInfo={userInfo} />\n            </PodcastProtectedRoute>\n          } />\n          \n          {/* Analytics route */}\n          <Route path=\"/analytics\" element={\n            <PodcastProtectedRoute>\n              <AnalyticsPage userInfo={userInfo} />\n            </PodcastProtectedRoute>\n          } />\n          \n          {/* Transactions route */}\n          <Route path=\"/transactions\" element={\n            <PodcastProtectedRoute>\n              <TransactionsPage userInfo={userInfo} />\n            </PodcastProtectedRoute>\n          } />\n          \n          {/* Referrals route */}\n          <Route path=\"/referrals\" element={\n            <PodcastProtectedRoute>\n              <ReferralsPage userInfo={userInfo} />\n            </PodcastProtectedRoute>\n          } />\n          \n          {/* Settings route */}\n          <Route path=\"/settings\" element={\n            <PodcastProtectedRoute>\n              <SettingsPage userInfo={userInfo} />\n            </PodcastProtectedRoute>\n          } />\n          \n          {/* Default route - redirect based on auth status */}\n          <Route path=\"/\" element={\n            <Navigate to={signedIn ? \"/dashboard\" : \"/auth\"} replace />\n          } />\n          \n          {/* Debug route to reset authentication */}\n          <Route path=\"/reset\" element={\n            <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n              <div className=\"bg-white p-8 rounded-lg shadow-md text-center\">\n                <h1 className=\"text-2xl font-bold mb-4\">Reset Authentication</h1>\n                <button \n                  onClick={() => {\n                    clearAllAuthData();\n                    setSignedIn(false);\n                    setUserInfo(null);\n                    toast.success('All authentication data cleared!');\n                    setTimeout(() => window.location.href = '/auth', 1000);\n                  }}\n                  className=\"bg-red-600 text-white px-6 py-3 rounded-lg hover:bg-red-700\"\n                >\n                  Clear All Data & Reset\n                </button>\n                <p className=\"text-gray-600 text-sm mt-4\">This will clear all stored authentication data</p>\n              </div>\n            </div>\n          } />\n          \n          {/* Legacy routes - redirect to new auth flow */}\n          <Route path=\"/login\" element={<Navigate to=\"/auth\" replace />} />\n          <Route path=\"/signup\" element={<Navigate to=\"/auth\" replace />} />\n          <Route path=\"/connect-youtube\" element={<Navigate to=\"/auth\" replace />} />\n        </Routes>\n      </Router>\n      \n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n        style={{ zIndex: 9999 }}\n      />\n    </AuthContext.Provider>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}