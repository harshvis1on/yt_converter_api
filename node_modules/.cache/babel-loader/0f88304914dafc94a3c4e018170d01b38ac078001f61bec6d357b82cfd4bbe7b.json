{"ast":null,"code":"// Safe localStorage utilities with JSON parsing\nexport const safeGetItem=function(key){let defaultValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;try{const item=localStorage.getItem(key);// Handle null, undefined, or \"undefined\" string\nif(!item||item==='null'||item==='undefined'){return defaultValue;}return JSON.parse(item);}catch(error){console.error(`Error parsing localStorage item \"${key}\":`,error);// Clean up invalid data\nlocalStorage.removeItem(key);return defaultValue;}};export const safeSetItem=(key,value)=>{try{localStorage.setItem(key,JSON.stringify(value));return true;}catch(error){console.error(`Error setting localStorage item \"${key}\":`,error);return false;}};export const cleanupInvalidData=()=>{const keysToCheck=['channelData','videosData','user_info','prefillData'];keysToCheck.forEach(key=>{const item=localStorage.getItem(key);if(item==='undefined'||item==='null'){console.log(`Cleaning up invalid localStorage key: ${key}`);localStorage.removeItem(key);}});};// Run cleanup on module load\ncleanupInvalidData();","map":{"version":3,"names":["safeGetItem","key","defaultValue","arguments","length","undefined","item","localStorage","getItem","JSON","parse","error","console","removeItem","safeSetItem","value","setItem","stringify","cleanupInvalidData","keysToCheck","forEach","log"],"sources":["/Users/harshdeshmukh/YouTube To Mp4 Links/src/utils/localStorage.js"],"sourcesContent":["// Safe localStorage utilities with JSON parsing\nexport const safeGetItem = (key, defaultValue = null) => {\n  try {\n    const item = localStorage.getItem(key);\n    \n    // Handle null, undefined, or \"undefined\" string\n    if (!item || item === 'null' || item === 'undefined') {\n      return defaultValue;\n    }\n    \n    return JSON.parse(item);\n  } catch (error) {\n    console.error(`Error parsing localStorage item \"${key}\":`, error);\n    \n    // Clean up invalid data\n    localStorage.removeItem(key);\n    \n    return defaultValue;\n  }\n};\n\nexport const safeSetItem = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n    return true;\n  } catch (error) {\n    console.error(`Error setting localStorage item \"${key}\":`, error);\n    return false;\n  }\n};\n\nexport const cleanupInvalidData = () => {\n  const keysToCheck = ['channelData', 'videosData', 'user_info', 'prefillData'];\n  \n  keysToCheck.forEach(key => {\n    const item = localStorage.getItem(key);\n    if (item === 'undefined' || item === 'null') {\n      console.log(`Cleaning up invalid localStorage key: ${key}`);\n      localStorage.removeItem(key);\n    }\n  });\n};\n\n// Run cleanup on module load\ncleanupInvalidData();"],"mappings":"AAAA;AACA,MAAO,MAAM,CAAAA,WAAW,CAAG,QAAAA,CAACC,GAAG,CAA0B,IAAxB,CAAAC,YAAY,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CAClD,GAAI,CACF,KAAM,CAAAG,IAAI,CAAGC,YAAY,CAACC,OAAO,CAACP,GAAG,CAAC,CAEtC;AACA,GAAI,CAACK,IAAI,EAAIA,IAAI,GAAK,MAAM,EAAIA,IAAI,GAAK,WAAW,CAAE,CACpD,MAAO,CAAAJ,YAAY,CACrB,CAEA,MAAO,CAAAO,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CACzB,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oCAAoCV,GAAG,IAAI,CAAEU,KAAK,CAAC,CAEjE;AACAJ,YAAY,CAACM,UAAU,CAACZ,GAAG,CAAC,CAE5B,MAAO,CAAAC,YAAY,CACrB,CACF,CAAC,CAED,MAAO,MAAM,CAAAY,WAAW,CAAGA,CAACb,GAAG,CAAEc,KAAK,GAAK,CACzC,GAAI,CACFR,YAAY,CAACS,OAAO,CAACf,GAAG,CAAEQ,IAAI,CAACQ,SAAS,CAACF,KAAK,CAAC,CAAC,CAChD,MAAO,KAAI,CACb,CAAE,MAAOJ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oCAAoCV,GAAG,IAAI,CAAEU,KAAK,CAAC,CACjE,MAAO,MAAK,CACd,CACF,CAAC,CAED,MAAO,MAAM,CAAAO,kBAAkB,CAAGA,CAAA,GAAM,CACtC,KAAM,CAAAC,WAAW,CAAG,CAAC,aAAa,CAAE,YAAY,CAAE,WAAW,CAAE,aAAa,CAAC,CAE7EA,WAAW,CAACC,OAAO,CAACnB,GAAG,EAAI,CACzB,KAAM,CAAAK,IAAI,CAAGC,YAAY,CAACC,OAAO,CAACP,GAAG,CAAC,CACtC,GAAIK,IAAI,GAAK,WAAW,EAAIA,IAAI,GAAK,MAAM,CAAE,CAC3CM,OAAO,CAACS,GAAG,CAAC,yCAAyCpB,GAAG,EAAE,CAAC,CAC3DM,YAAY,CAACM,UAAU,CAACZ,GAAG,CAAC,CAC9B,CACF,CAAC,CAAC,CACJ,CAAC,CAED;AACAiB,kBAAkB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}