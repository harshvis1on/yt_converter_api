{"ast":null,"code":"var _jsxFileName = \"/Users/harshdeshmukh/YouTube To Mp4 Links/src/components/PodcastCreationFlow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PodcastOnboardingWizard from './PodcastOnboardingWizard';\nimport { createPodcast } from '../services/n8nApi';\nimport { getUserPodcasts } from '../services/supabase';\nimport { safeGetItem } from '../utils/localStorage';\nimport { markOnboardingCompleted } from '../utils/onboarding';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PodcastCreationFlow() {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [channelData, setChannelData] = useState(null);\n  const [prefillData, setPrefillData] = useState(null);\n\n  // Load data from localStorage on mount\n  useEffect(() => {\n    const storedChannelData = safeGetItem('channelData');\n    const storedPrefillData = safeGetItem('prefillData');\n    setChannelData(storedChannelData);\n    setPrefillData(storedPrefillData);\n\n    // Redirect if no channel data after a brief delay (allow for data to load)\n    const timer = setTimeout(() => {\n      if (!storedChannelData) {\n        console.log('No channel data found, redirecting to auth');\n        toast.error('No channel data found. Please start over.');\n        navigate('/auth', {\n          replace: true\n        });\n      }\n    }, 3000); // Give 3 seconds for data to load\n\n    return () => clearTimeout(timer);\n  }, [navigate]);\n  const handleFormSubmit = async formData => {\n    setLoading(true);\n    try {\n      const result = await createPodcast(formData);\n      if (result && result.success) {\n        // Mark onboarding as completed using utility\n        markOnboardingCompleted(result.podcastId, result.podcast);\n\n        // Clean up temporary data\n        localStorage.removeItem('prefillData');\n        localStorage.removeItem('channelData');\n        localStorage.removeItem('videosData');\n\n        // Show success message\n        toast.success(`ðŸŽ‰ Podcast \"${formData.title}\" created successfully!`);\n\n        // Navigate to dashboard\n        setTimeout(() => {\n          navigate('/dashboard', {\n            replace: true\n          });\n        }, 2000);\n      } else {\n        throw new Error((result === null || result === void 0 ? void 0 : result.message) || 'Podcast creation failed');\n      }\n    } catch (error) {\n      console.error('Podcast creation error:', error);\n      toast.error('Failed to create podcast: ' + error.message);\n      setLoading(false);\n    }\n  };\n  const handleCancel = () => {\n    // Clean up stored data and redirect back to auth\n    localStorage.removeItem('channelData');\n    localStorage.removeItem('videosData');\n    localStorage.removeItem('prefillData');\n    toast.info('Podcast creation cancelled');\n    navigate('/auth', {\n      replace: true\n    });\n  };\n\n  // Don't render if no data\n  if (!channelData || !prefillData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-500 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Loading channel data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(PodcastOnboardingWizard, {\n    channelData: channelData,\n    prefillData: prefillData,\n    onSubmit: handleFormSubmit,\n    onCancel: handleCancel,\n    loading: loading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(PodcastCreationFlow, \"uetfnSVX0hXWYz9VX4e2Ct3KLDo=\", false, function () {\n  return [useNavigate];\n});\n_c = PodcastCreationFlow;\nvar _c;\n$RefreshReg$(_c, \"PodcastCreationFlow\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","toast","PodcastOnboardingWizard","createPodcast","getUserPodcasts","safeGetItem","markOnboardingCompleted","jsxDEV","_jsxDEV","PodcastCreationFlow","_s","navigate","loading","setLoading","channelData","setChannelData","prefillData","setPrefillData","storedChannelData","storedPrefillData","timer","setTimeout","console","log","error","replace","clearTimeout","handleFormSubmit","formData","result","success","podcastId","podcast","localStorage","removeItem","title","Error","message","handleCancel","info","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onCancel","_c","$RefreshReg$"],"sources":["/Users/harshdeshmukh/YouTube To Mp4 Links/src/components/PodcastCreationFlow.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PodcastOnboardingWizard from './PodcastOnboardingWizard';\nimport { createPodcast } from '../services/n8nApi';\nimport { getUserPodcasts } from '../services/supabase';\nimport { safeGetItem } from '../utils/localStorage';\nimport { markOnboardingCompleted } from '../utils/onboarding';\n\nexport default function PodcastCreationFlow() {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [channelData, setChannelData] = useState(null);\n  const [prefillData, setPrefillData] = useState(null);\n\n  // Load data from localStorage on mount\n  useEffect(() => {\n    const storedChannelData = safeGetItem('channelData');\n    const storedPrefillData = safeGetItem('prefillData');\n    \n    setChannelData(storedChannelData);\n    setPrefillData(storedPrefillData);\n    \n    // Redirect if no channel data after a brief delay (allow for data to load)\n    const timer = setTimeout(() => {\n      if (!storedChannelData) {\n        console.log('No channel data found, redirecting to auth');\n        toast.error('No channel data found. Please start over.');\n        navigate('/auth', { replace: true });\n      }\n    }, 3000); // Give 3 seconds for data to load\n    \n    return () => clearTimeout(timer);\n  }, [navigate]);\n\n  const handleFormSubmit = async (formData) => {\n    setLoading(true);\n    \n    try {\n      const result = await createPodcast(formData);\n      \n      if (result && result.success) {\n        // Mark onboarding as completed using utility\n        markOnboardingCompleted(result.podcastId, result.podcast);\n        \n        // Clean up temporary data\n        localStorage.removeItem('prefillData');\n        localStorage.removeItem('channelData');\n        localStorage.removeItem('videosData');\n        \n        // Show success message\n        toast.success(`ðŸŽ‰ Podcast \"${formData.title}\" created successfully!`);\n        \n        // Navigate to dashboard\n        setTimeout(() => {\n          navigate('/dashboard', { replace: true });\n        }, 2000);\n        \n      } else {\n        throw new Error(result?.message || 'Podcast creation failed');\n      }\n    } catch (error) {\n      console.error('Podcast creation error:', error);\n      toast.error('Failed to create podcast: ' + error.message);\n      setLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    // Clean up stored data and redirect back to auth\n    localStorage.removeItem('channelData');\n    localStorage.removeItem('videosData');\n    localStorage.removeItem('prefillData');\n    \n    toast.info('Podcast creation cancelled');\n    navigate('/auth', { replace: true });\n  };\n\n  // Don't render if no data\n  if (!channelData || !prefillData) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-500 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading channel data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <PodcastOnboardingWizard\n      channelData={channelData}\n      prefillData={prefillData}\n      onSubmit={handleFormSubmit}\n      onCancel={handleCancel}\n      loading={loading}\n    />\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}