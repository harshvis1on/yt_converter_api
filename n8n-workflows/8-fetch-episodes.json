{
  "name": "8. Fetch Episodes from Database",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "fetch-episodes",
        "responseMode": "responseNode"
      },
      "id": "webhook-start",
      "name": "Fetch Episodes Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "fetch-episodes"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "podcastId",
              "value": "={{ $json.podcastId }}"
            },
            {
              "name": "userId",
              "value": "={{ $json.userId }}"
            }
          ]
        }
      },
      "id": "extract-params",
      "name": "Extract Parameters",  
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $json.podcastId }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            },
            {
              "id": "condition-2",
              "leftValue": "={{ $json.userId }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "validate-params",
      "name": "Validate Parameters",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list"
        },
        "table": {
          "__rl": true,
          "value": "episodes",
          "mode": "list"
        },
        "where": {
          "values": [
            {
              "column": "podcast_id",
              "condition": "equal",
              "value": "={{ $json.podcastId }}"
            },
            {
              "column": "user_id", 
              "condition": "equal",
              "value": "={{ $json.userId }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "created_at",
              "direction": "DESC"
            }
          ]
        },
        "limit": 100
      },
      "id": "fetch-from-supabase",
      "name": "Fetch from Supabase",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [900, 280],
      "credentials": {
        "postgres": {
          "id": "supabase-postgres",
          "name": "Supabase Postgres"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "check-results",
      "name": "Check Results",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1120, 280]
    },
    {
      "parameters": {
        "values": {
          "array": [
            {
              "name": "episodes",
              "value": "={{ $json.map(episode => ({\n  id: episode.id,\n  title: episode.title,\n  summary: episode.summary || episode.description,\n  publishedAt: episode.published_at || episode.created_at,\n  duration: episode.duration || 0,\n  status: episode.status || 'published',\n  playCount: episode.play_count || 0,\n  downloadCount: episode.download_count || 0,\n  fileUrl: episode.file_url || episode.audio_url,\n  thumbnailUrl: episode.thumbnail_url,\n  youtube_video_id: episode.youtube_video_id,\n  megaphone_id: episode.megaphone_id,\n  podcast_id: episode.podcast_id,\n  user_id: episode.user_id,\n  created_at: episode.created_at,\n  updated_at: episode.updated_at\n})) }}"
            }
          ],
          "number": [
            {
              "name": "totalCount",
              "value": "={{ $json.length }}"
            }
          ],
          "boolean": [
            {
              "name": "success",
              "value": true
            }
          ],
          "string": [
            {
              "name": "message",
              "value": "={{ `Found ${$json.length} episodes for this podcast` }}"
            }
          ]
        }
      },
      "id": "format-success-response",
      "name": "Format Success Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1340, 260]
    },
    {
      "parameters": {
        "values": {
          "array": [
            {
              "name": "episodes",
              "value": "=[]"
            }
          ],
          "number": [
            {
              "name": "totalCount",
              "value": 0
            }
          ],
          "boolean": [
            {
              "name": "success",
              "value": true
            }
          ],
          "string": [
            {
              "name": "message",
              "value": "No episodes found for this podcast"
            }
          ]
        }
      },
      "id": "format-no-episodes-response",
      "name": "Format No Episodes Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "values": {
          "array": [
            {
              "name": "episodes",
              "value": "=[]"
            }
          ],
          "boolean": [
            {
              "name": "success",
              "value": false
            }
          ],
          "string": [
            {
              "name": "error",
              "value": "Missing required parameters: podcastId and userId are required"
            },
            {
              "name": "message",
              "value": "Invalid request parameters"
            }
          ]
        }
      },
      "id": "format-error-response",
      "name": "Format Error Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [900, 340]
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1560, 300]
    }
  ],
  "connections": {
    "webhook-start": {
      "main": [
        [
          {
            "node": "extract-params",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extract-params": {
      "main": [
        [
          {
            "node": "validate-params",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "validate-params": {
      "main": [
        [
          {
            "node": "fetch-from-supabase",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "format-error-response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fetch-from-supabase": {
      "main": [
        [
          {
            "node": "check-results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check-results": {
      "main": [
        [
          {
            "node": "format-success-response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "format-no-episodes-response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "format-success-response": {
      "main": [
        [
          {
            "node": "webhook-response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "format-no-episodes-response": {
      "main": [
        [
          {
            "node": "webhook-response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "format-error-response": {
      "main": [
        [
          {
            "node": "webhook-response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-07-25T13:30:00.000Z",
  "versionId": "1"
}