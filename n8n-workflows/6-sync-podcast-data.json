{
  "name": "6. Sync Podcast Data from Megaphone",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "sync-podcast-data",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": "*"
        }
      },
      "id": "webhook-start",
      "name": "Sync Podcast Data Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $json.userId }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "check-user-id",
      "name": "Validate User ID",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list"
        },
        "table": {
          "__rl": true,
          "value": "podcasts",
          "mode": "list"
        },
        "where": {
          "values": [
            {
              "column": "user_id",
              "condition": "equal",
              "value": "={{ $json.userId }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "created_at",
              "direction": "DESC"
            }
          ]
        },
        "limit": 1
      },
      "id": "get-user-podcast",
      "name": "Get User Podcast from Supabase",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [680, 280],
      "credentials": {
        "postgres": {
          "id": "supabase-postgres",
          "name": "Supabase Postgres"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "check-podcast-exists",
      "name": "Check Podcast Exists",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [900, 280]
    },
    {
      "parameters": {
        "url": "={{ 'https://cms.megaphone.fm/api/networks/1077e5f2-0247-11f0-a50a-770c9b0b9b7b/podcasts/' + $json[0].megaphone_id }}",
        "authentication": "genericCredentials",
        "genericAuthType": "httpHeaderAuth",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "fetch-megaphone-data",
      "name": "Fetch Latest Data from Megaphone",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1120, 260],
      "credentials": {
        "httpHeaderAuth": {
          "id": "megaphone-api-auth",
          "name": "Megaphone API Auth"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list"
        },
        "table": {
          "__rl": true,
          "value": "podcasts",
          "mode": "list"
        },
        "where": {
          "values": [
            {
              "column": "megaphone_id",
              "condition": "equal",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "columns": {
          "mappingMode": "defineBelow",
          "values": {
            "title": "={{ $json.title }}",
            "subtitle": "={{ $json.subtitle }}",
            "summary": "={{ $json.summary || $json.description }}",
            "image_url": "={{ $json.artwork_url }}",
            "feed_url": "={{ $json.feed_url }}",
            "status": "={{ $json.status }}",
            "episode_count": "={{ $json.episodes_count || 0 }}",
            "updated_at": "={{ new Date().toISOString() }}",
            "last_megaphone_sync": "={{ new Date().toISOString() }}"
          }
        }
      },
      "id": "update-supabase",
      "name": "Update Podcast in Supabase",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [1340, 260],
      "credentials": {
        "postgres": {
          "id": "supabase-postgres",
          "name": "Supabase Postgres"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "object": [
            {
              "name": "podcast",
              "value": "={{ {\n  title: $json.title || 'Unknown Podcast',\n  subtitle: $json.subtitle || 'Podcast synced from Megaphone',\n  summary: $json.summary || $json.description || 'Podcast data synced from Megaphone API',\n  episodes_count: $json.episodes_count || 0,\n  status: $json.status || 'active',\n  image_url: $json.artwork_url,\n  feed_url: $json.feed_url,\n  updated_at: new Date().toISOString(),\n  megaphone_id: $json.id,\n  last_sync: new Date().toISOString()\n} }}"
            }
          ],
          "boolean": [
            {
              "name": "success",
              "value": true
            }
          ],
          "string": [
            {
              "name": "message",
              "value": "Podcast data synced from Megaphone and updated in database"
            }
          ]
        }
      },
      "id": "format-success",
      "name": "Format Success Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [1560, 260]
    },
    {
      "parameters": {
        "values": {
          "boolean": [
            {
              "name": "success",
              "value": false
            }
          ],
          "string": [
            {
              "name": "error",
              "value": "No podcasts found for this user"
            },
            {
              "name": "message",
              "value": "User has no podcasts in database. Create a podcast first."
            }
          ]
        }
      },
      "id": "format-no-podcast",
      "name": "Format No Podcast Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [1120, 320]
    },
    {
      "parameters": {
        "values": {
          "boolean": [
            {
              "name": "success",
              "value": false
            }
          ],
          "string": [
            {
              "name": "error",
              "value": "User ID is required for podcast sync"
            },
            {
              "name": "message",
              "value": "Missing user ID parameter"
            }
          ]
        }
      },
      "id": "format-error",
      "name": "Format Error Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [680, 360]
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "name": "Access-Control-Allow-Methods",
                "value": "GET, POST, PUT, DELETE, OPTIONS"
              },
              {
                "name": "Access-Control-Allow-Headers",
                "value": "Content-Type, Authorization, Accept, Origin"
              },
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1780, 320]
    }
  ],
  "connections": {
    "webhook-start": {
      "main": [
        [
          {
            "node": "check-user-id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check-user-id": {
      "main": [
        [
          {
            "node": "get-user-podcast",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "format-error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-user-podcast": {
      "main": [
        [
          {
            "node": "check-podcast-exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check-podcast-exists": {
      "main": [
        [
          {
            "node": "fetch-megaphone-data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "format-no-podcast",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fetch-megaphone-data": {
      "main": [
        [
          {
            "node": "update-supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update-supabase": {
      "main": [
        [
          {
            "node": "format-success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "format-success": {
      "main": [
        [
          {
            "node": "webhook-response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "format-no-podcast": {
      "main": [
        [
          {
            "node": "webhook-response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "format-error": {
      "main": [
        [
          {
            "node": "webhook-response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-01-29T16:00:00.000Z",
  "versionId": "6"
}